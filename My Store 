<!DOCTYPE html>
<html lang="hi">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>मेरी दुकान</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <style>
        body {
            font-family: 'Inter', sans-serif;
            background-color: #f3f4f6;
        }
        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 1rem;
        }
        .product-card {
            transition: transform 0.2s ease-in-out, box-shadow 0.2s ease-in-out;
            cursor: pointer;
        }
        .product-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 15px rgba(0, 0, 0, 0.1);
        }
    </style>
</head>
<body class="bg-gray-100 text-gray-800">

    <!-- Header -->
    <header class="bg-white shadow-sm sticky top-0 z-50">
        <div class="container flex justify-between items-center py-4">
            <h1 class="text-2xl font-bold text-gray-900">मेरी दुकान</h1>
            <button id="cart-button" class="relative p-2 rounded-full hover:bg-gray-100 transition-colors duration-200">
                <i class="fas fa-shopping-cart text-xl text-gray-700"></i>
                <span id="cart-count" class="absolute top-0 right-0 inline-flex items-center justify-center px-2 py-1 text-xs font-bold leading-none text-red-100 bg-red-600 rounded-full transform translate-x-1/2 -translate-y-1/2">0</span>
            </button>
        </div>
    </header>

    <!-- Main Content -->
    <main class="container py-8">
        <h2 class="text-3xl font-semibold text-center text-gray-900 mb-8">उत्पाद</h2>
        <div id="product-list" class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6">
            <!-- Products will be injected here by JavaScript -->
        </div>
    </main>

    <!-- Shopping Cart Modal -->
    <div id="cart-modal" class="hidden fixed inset-0 bg-gray-600 bg-opacity-50 z-50 flex items-center justify-center">
        <div class="bg-white rounded-lg shadow-xl p-6 w-full max-w-lg mx-4">
            <div class="flex justify-between items-center pb-3 border-b border-gray-200">
                <h3 class="text-2xl font-bold">शॉपिंग कार्ट</h3>
                <button id="close-modal" class="text-gray-400 hover:text-gray-600 transition-colors duration-200">
                    <i class="fas fa-times text-2xl"></i>
                </button>
            </div>
            <div id="cart-items" class="py-4 max-h-80 overflow-y-auto">
                <!-- Cart items will be injected here -->
            </div>
            <div class="pt-4 border-t border-gray-200">
                <div class="flex justify-between items-center font-bold text-lg mb-4">
                    <span>कुल:</span>
                    <span id="cart-total">₹0.00</span>
                </div>
                <button id="checkout-button" class="w-full bg-blue-600 text-white font-bold py-3 rounded-lg hover:bg-blue-700 transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-50">
                    चेकआउट
                </button>
            </div>
        </div>
    </div>
    
    <!-- Success Message Modal -->
    <div id="success-modal" class="hidden fixed inset-0 bg-gray-600 bg-opacity-50 z-50 flex items-center justify-center">
        <div class="bg-white rounded-lg shadow-xl p-8 max-w-md text-center mx-4">
            <div class="flex justify-center mb-4">
                <i class="fas fa-check-circle text-green-500 text-5xl"></i>
            </div>
            <h3 class="text-2xl font-bold mb-2 text-green-700">सफलता!</h3>
            <p class="text-gray-700">आपका ऑर्डर सफलतापूर्वक पूरा हो गया है।</p>
            <button id="close-success-modal" class="mt-6 bg-green-600 text-white font-bold py-2 px-6 rounded-lg hover:bg-green-700 transition-colors duration-200 focus:outline-none">
                ठीक है
            </button>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const products = [
                { id: 1, name: 'स्मार्टफोन', price: 25000, image: 'https://placehold.co/400x300/4f46e5/ffffff?text=Smartphone' },
                { id: 2, name: 'लैपटॉप', price: 65000, image: 'https://placehold.co/400x300/4f46e5/ffffff?text=Laptop' },
                { id: 3, name: 'हेडफ़ोन', price: 3000, image: 'https://placehold.co/400x300/4f46e5/ffffff?text=Headphones' },
                { id: 4, name: 'स्मार्टवॉच', price: 8000, image: 'https://placehold.co/400x300/4f46e5/ffffff?text=Smartwatch' },
                { id: 5, name: 'कैमरा', price: 45000, image: 'https://placehold.co/400x300/4f46e5/ffffff?text=Camera' },
                { id: 6, name: 'गेमिंग माउस', price: 1500, image: 'https://placehold.co/400x300/4f46e5/ffffff?text=Gaming+Mouse' },
            ];

            let cart = JSON.parse(localStorage.getItem('cart')) || [];

            const productListElement = document.getElementById('product-list');
            const cartCountElement = document.getElementById('cart-count');
            const cartButton = document.getElementById('cart-button');
            const cartModal = document.getElementById('cart-modal');
            const closeModalButton = document.getElementById('close-modal');
            const cartItemsElement = document.getElementById('cart-items');
            const cartTotalElement = document.getElementById('cart-total');
            const checkoutButton = document.getElementById('checkout-button');
            const successModal = document.getElementById('success-modal');
            const closeSuccessModalButton = document.getElementById('close-success-modal');

            function renderProducts() {
                productListElement.innerHTML = '';
                products.forEach(product => {
                    const productCard = document.createElement('div');
                    productCard.classList.add('product-card', 'bg-white', 'p-4', 'rounded-lg', 'shadow-md', 'flex', 'flex-col', 'items-center', 'text-center');
                    
                    productCard.innerHTML = `
                        <img src="${product.image}" alt="${product.name}" class="w-full h-48 object-cover rounded-lg mb-4">
                        <h3 class="text-xl font-bold mb-2">${product.name}</h3>
                        <p class="text-gray-600 mb-4">₹${product.price}</p>
                        <button class="add-to-cart-btn mt-auto bg-blue-500 text-white px-4 py-2 rounded-lg hover:bg-blue-600 transition-colors duration-200" data-id="${product.id}">
                            कार्ट में जोड़ें
                        </button>
                    `;
                    productListElement.appendChild(productCard);
                });

                document.querySelectorAll('.add-to-cart-btn').forEach(button => {
                    button.addEventListener('click', (e) => {
                        const productId = parseInt(e.target.dataset.id);
                        addToCart(productId);
                    });
                });
            }

            function addToCart(productId) {
                const product = products.find(p => p.id === productId);
                const existingItem = cart.find(item => item.id === productId);

                if (existingItem) {
                    existingItem.quantity++;
                } else {
                    cart.push({ ...product, quantity: 1 });
                }
                saveCart();
                updateCartUI();
            }

            function saveCart() {
                localStorage.setItem('cart', JSON.stringify(cart));
            }

            function updateCartUI() {
                cartCountElement.textContent = cart.reduce((sum, item) => sum + item.quantity, 0);
                renderCartItems();
            }

            function renderCartItems() {
                cartItemsElement.innerHTML = '';
                let total = 0;
                if (cart.length === 0) {
                    cartItemsElement.innerHTML = '<p class="text-gray-500 text-center">कार्ट खाली है।</p>';
                } else {
                    cart.forEach(item => {
                        total += item.price * item.quantity;
                        const cartItem = document.createElement('div');
                        cartItem.classList.add('flex', 'items-center', 'justify-between', 'py-2', 'border-b', 'border-gray-100');
                        cartItem.innerHTML = `
                            <div class="flex items-center">
                                <img src="${item.image}" alt="${item.name}" class="w-16 h-16 object-cover rounded-md mr-4">
                                <div>
                                    <h4 class="font-semibold">${item.name}</h4>
                                    <p class="text-gray-600">₹${item.price} x ${item.quantity}</p>
                                </div>
                            </div>
                            <div class="flex items-center">
                                <span class="font-bold">₹${item.price * item.quantity}</span>
                                <button class="remove-from-cart-btn text-red-500 ml-4 hover:text-red-700" data-id="${item.id}">
                                    <i class="fas fa-trash-alt"></i>
                                </button>
                            </div>
                        `;
                        cartItemsElement.appendChild(cartItem);
                    });
                }
                cartTotalElement.textContent = `₹${total}`;

                document.querySelectorAll('.remove-from-cart-btn').forEach(button => {
                    button.addEventListener('click', (e) => {
                        const productId = parseInt(e.target.dataset.id);
                        removeFromCart(productId);
                    });
                });
            }

            function removeFromCart(productId) {
                cart = cart.filter(item => item.id !== productId);
                saveCart();
                updateCartUI();
            }

            cartButton.addEventListener('click', () => {
                cartModal.classList.remove('hidden');
                updateCartUI();
            });

            closeModalButton.addEventListener('click', () => {
                cartModal.classList.add('hidden');
            });

            checkoutButton.addEventListener('click', () => {
                if (cart.length > 0) {
                    // Simulate a successful transaction
                    cart = [];
                    saveCart();
                    updateCartUI();
                    cartModal.classList.add('hidden');
                    successModal.classList.remove('hidden');
                } else {
                    alert("आपका कार्ट खाली है!");
                }
            });
            
            closeSuccessModalButton.addEventListener('click', () => {
                successModal.classList.add('hidden');
            });

            // Close modals when clicking outside
            window.addEventListener('click', (e) => {
                if (e.target === cartModal) {
                    cartModal.classList.add('hidden');
                }
                if (e.target === successModal) {
                    successModal.classList.add('hidden');
                }
            });

            renderProducts();
            updateCartUI();
        });
    </script>
</body>
</html>